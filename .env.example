# Please Note:
# In PHP Versions <= 7.4 MySQL8 is not supported due to lacking pdo support

# To determine the name of your containers
COMPOSE_PROJECT_NAME=your-domain
MY_DOMAIN=your-domain.local

# Possible values: php54, php56, php71, php72, php73, php74, php8
PHPVERSION=php73
DOCUMENT_ROOT=../zcart
APACHE_DOCUMENT_ROOT=/var/www/html
VHOSTS_DIR=./config/vhosts
APACHE_LOG_DIR=./logs/apache2
PHP_INI=./config/php/php.ini

# Possible values: mariadb, mysql, mysql8
DATABASE=mariadb
MYSQL_DATA_DIR=./data/mysql
MYSQL_LOG_DIR=./logs/mysql

# If you already have the port 80 in use, you can change it (for example if you have Apache)
HOST_MACHINE_UNSECURE_HOST_PORT=80

# If you already have the port 443 in use, you can change it (for example if you have Apache)
HOST_MACHINE_SECURE_HOST_PORT=443

# If you already have the port 3306 in use, you can change it (for example if you have MySQL)
HOST_MACHINE_MYSQL_PORT=3306

# If you already have the port 8080 in use, you can change it (for example if you have PMA)
HOST_MACHINE_PMA_PORT=8080

# If you already has the port 6379 in use, you can change it (for example if you have Redis)
HOST_MACHINE_REDIS_PORT=6378

# MySQL root user password
MYSQL_ROOT_PASSWORD=SuperPassword123456!

# Database settings: Username, password and database name
#
# If you need to give the docker user access to more databases than the "docker" db 
# you can grant the privileges with phpmyadmin to the user.
MYSQL_USER=user
MYSQL_PASSWORD=secret
MYSQL_DATABASE=user_db

#sudo openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -out /etc/apache2/ssl/server.crt -keyout /etc/apache2/ssl/server.key
#sudo openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -out ./config/ssl/server.crt -keyout ./config/ssl/server.key
#chmod 777 ./config/ssl